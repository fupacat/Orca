{
  // Python Configuration
  "python.defaultInterpreterPath": "${workspaceFolder}/.venv/Scripts/python.exe",
  "python.analysis.typeCheckingMode": "strict",
  "python.analysis.autoImportCompletions": true,
  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.extraPaths": [
    "${workspaceFolder}/src"
  ],
  
  // Linting
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": true,
  "python.linting.pylintArgs": [
    "--rcfile=${workspaceFolder}/pyproject.toml"
  ],
  "python.linting.mypyEnabled": true,
  "python.linting.mypyArgs": [
    "--config-file=${workspaceFolder}/pyproject.toml"
  ],
  "python.linting.banditEnabled": true,
  "python.linting.banditArgs": [
    "-c",
    "${workspaceFolder}/pyproject.toml"
  ],
  
  // Formatting
  "python.formatting.provider": "black",
  "python.formatting.blackPath": "black",
  "python.formatting.blackArgs": [
    "--line-length",
    "120"
  ],
  
  // Import Sorting
  "python.sortImports.path": "isort",
  "python.sortImports.args": [
    "--profile",
    "black",
    "--line-length",
    "120"
  ],
  
  // Testing
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": false,
  "python.testing.pytestArgs": [
    "tests",
    "-v",
    "--tb=short"
  ],
  "python.testing.autoTestDiscoverOnSaveEnabled": true,
  
  // Editor Settings
  "editor.formatOnSave": true,
  "editor.formatOnPaste": false,
  "editor.codeActionsOnSave": {
    "source.organizeImports": true,
    "source.fixAll": false
  },
  "editor.rulers": [120],
  "editor.tabSize": 4,
  "editor.insertSpaces": true,
  "editor.trimAutoWhitespace": true,
  "editor.renderWhitespace": "boundary",
  
  // File Settings
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.encoding": "utf8",
  "files.eol": "\n",
  "files.exclude": {
    "**/__pycache__": true,
    "**/*.pyc": true,
    "**/.pytest_cache": true,
    "**/.mypy_cache": true,
    "**/htmlcov": true,
    "**/.coverage": true,
    "**/*.egg-info": true
  },
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/*/**": true,
    "**/.venv/**": true,
    "**/htmlcov/**": true,
    "**/__pycache__/**": true,
    "**/.pytest_cache/**": true,
    "**/.mypy_cache/**": true
  },
  
  // Search Settings
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true,
    "**/.venv": true,
    "**/htmlcov": true,
    "**/__pycache__": true,
    "**/.pytest_cache": true,
    "**/.mypy_cache": true,
    "**/coverage.xml": true,
    "**/*.egg-info": true
  },
  
  // Terminal Settings
  "terminal.integrated.env.windows": {
    "PYTHONPATH": "${workspaceFolder}/src"
  },
  "terminal.integrated.cwd": "${workspaceFolder}",
  
  // Git Settings
  "git.ignoreLimitWarning": true,
  "git.autofetch": true,
  
  // Markdown Settings
  "markdown.preview.breaks": true,
  "markdown.preview.linkify": true,
  
  // JSON Settings
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.tabSize": 2
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.tabSize": 2
  },
  
  // Python-specific Settings
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": true
    },
    "editor.tabSize": 4
  },
  
  // Markdown-specific Settings
  "[markdown]": {
    "editor.wordWrap": "on",
    "editor.quickSuggestions": {
      "comments": "off",
      "strings": "off",
      "other": "off"
    }
  },
  
  // YAML Settings
  "[yaml]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.autoIndent": "advanced"
  },
  
  // Coverage Gutters (if extension installed)
  "coverage-gutters.coverageFileNames": [
    "coverage.xml",
    "htmlcov/index.html"
  ],
  "coverage-gutters.showLineCoverage": true,
  "coverage-gutters.showRulerCoverage": true,
  
  // Orca-specific Settings
  "orca.archonUrl": "http://localhost:8051/mcp",
  "orca.serenaEnabled": true,
  "orca.defaultExecutionStrategy": "hybrid",
  "orca.coverageThreshold": 95
}
