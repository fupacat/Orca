# Orca Workflow Orchestration System .gitignore

# Operating System Files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
Desktop.ini

# IDE and Editor Files
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json
.idea/
*.swp
*.swo
*~
.project
.metadata
.settings/

# Keep Claude Code project configuration
# .claude/ is intentionally tracked for project setup

# Keep Windsurf IDE configuration
# .windsurf/ is intentionally tracked for project setup

# Archive directory (keep structure, ignore most contents)
.archive/**/*.md
.archive/workflows/**
.archive/executions/**
.archive/plans/**
!.archive/README.md

# Workflow artifacts in root (should be archived)
feature_*.md
impl_*.md
*_impl_plan.md
execute_*.py

# MCP Server Data (runtime only)
.serena/cache/
.serena/temp/
.serena/*.log

# Environment Variables and Secrets
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
*.key
*.pem
config/secrets.*

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Temporary files
*.tmp
*.temp
.tmp/
.temp/

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Database files (if any)
*.db
*.sqlite
*.sqlite3

# Generated documentation (keep workflow artifacts)
# docs/ folder contains important workflow artifacts, keep tracked

# Build artifacts (future-proofing for when Orca itself might have builds)
/build
/dist
*.o
*.so
*.dll
*.dylib

# Testing artifacts (if tests are added)
/coverage
/.nyc_output
.coverage
.pytest_cache/
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# Package manager files (if dependencies are added)
node_modules/
package-lock.json
yarn.lock
__pycache__/
*.py[cod]
*$py.class
.Python
env/
venv/
.venv
pip-log.txt
pip-delete-this-directory.txt

# Optional caches
.npm
.eslintcache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Backup files
*.bak
*.backup
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
Icon?
ehthumbs.db
Thumbs.db